// Generated by CoffeeScript 1.8.0
(function() {
  var game,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.MainGame = (function() {
    function MainGame(game) {
      this.restart = __bind(this.restart, this);
    }

    MainGame.prototype.init = function(level) {
      return this.level = level;
    };

    MainGame.prototype.create = function() {
      var style;
      console.log("Starting Level " + this.level);
      this.health_bar = new HealthBar(this.game);
      this.player = new Player(this.game, this.health_bar);
      this.obstacles = new Obstacles(this.game, this.player, this.level);
      this.player.create(100, 100);
      this.obstacles.setup();
      this.obstacles.clouds_level(25, 800, 2000, 0, 500, 0.5);
      this.obstacles.turbulence_level(25, 800, 2000, 0, 500);
      this.obstacles.planes_level(10, 2000, 10000, 0, 500);
      this.health_bar.create(GAME_WIDTH / 2, 20);
      style = {
        font: "76px Arial",
        fill: "rgb(0,0,0)",
        align: "center"
      };
      this.game_over_text = this.game.add.text(GAME_WIDTH / 2, GAME_HEIGHT / 2 - 100, "Game Over", style);
      this.play_again = this.game.add.button(GAME_WIDTH / 2 - 76, 300, "try_again", this.restart);
      this.game_over_text.visible = false;
      this.play_again.visible = false;
      this.game_over_text.anchor.set(0.5);
      return this.obstacles.set_game_over_objects(this.game_over_text, this.play_again);
    };

    MainGame.prototype.update = function() {
      this.player.update();
      return this.obstacles.update();
    };

    MainGame.prototype.restart = function() {
      return this.game.state.start("Game", true, false, this.level);
    };

    return MainGame;

  })();

  game = new Phaser.Game(800, 600, Phaser.AUTO, "game");

  game.state.add("Preloader", Preloader);

  game.state.add("Menu", Menu);

  game.state.add("Game", MainGame);

  game.state.add("LevelComplete", LevelComplete);

  game.state.start("Preloader");

}).call(this);
