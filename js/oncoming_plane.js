// Generated by CoffeeScript 1.8.0
(function() {
  this.OncomingPlanes = (function() {
    OncomingPlanes.preload = function(game) {
      game.load.image("oncoming_plane_body", "sprites/airplane_flipped_body.png");
      return game.load.image("oncoming_plane_tail", "sprites/airplane_flipped_tail.png");
    };

    function OncomingPlanes(game, player) {
      this.game = game;
      this.player = player;
    }

    OncomingPlanes.prototype.setup = function() {
      this.planes = this.game.add.group();
      return this.planes.enableBody = true;
    };

    OncomingPlanes.prototype.create_plane = function(x, y) {
      var body, tail;
      tail = this.planes.create(x, y, "oncoming_plane_tail");
      body = this.planes.create(x - 78, y + 23, "oncoming_plane_body");
      tail.body.velocity.x = -300;
      body.body.velocity.x = -300;
      tail.other_part = body;
      return body.other_part = tail;
    };

    OncomingPlanes.prototype.create_level = function(num_planes, x_start, x_end, y_start, y_end) {
      var i, x, y, _i, _results;
      _results = [];
      for (i = _i = 1; 1 <= num_planes ? _i <= num_planes : _i >= num_planes; i = 1 <= num_planes ? ++_i : --_i) {
        x = Math.random() * (x_end - x_start) + x_start;
        y = Math.random() * (y_end - y_start) + y_start;
        _results.push(this.create_plane(x, y));
      }
      return _results;
    };

    OncomingPlanes.prototype.stop = function() {
      return this.planes.children.forEach(function(part) {
        return part.body.velocity.x = 0;
      });
    };

    OncomingPlanes.prototype.update = function() {
      return this.game.physics.arcade.overlap(this.player.plane, this.planes, function(player, plane) {
        player.parent.children.forEach(function(sprite) {
          return sprite.body.velocity.y = 0;
        });
        plane.body.velocity.x = 0;
        return plane.other_part.body.velocity.x = 0;
      });
    };

    return OncomingPlanes;

  })();

}).call(this);
